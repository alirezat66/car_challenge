// Mocks generated by Mockito 5.4.4 from annotations
// in vehicle_selection/test/data/repositories/search_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:core/core.dart' as _i5;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:vehicle_selection/src/data/data_sources/search_remote_data_source.dart'
    as _i3;
import 'package:vehicle_selection/src/data/data_sources/user_data_source.dart'
    as _i7;
import 'package:vehicle_selection/src/domain/entities/search_result.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SearchRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchRemoteDataSource extends _i1.Mock
    implements _i3.SearchRemoteDataSource {
  MockSearchRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.SearchResult>> searchByVin(
    String? userId,
    String? vin,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchByVin,
          [
            userId,
            vin,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.SearchResult>>.value(
                _FakeEither_0<_i5.Failure, _i6.SearchResult>(
          this,
          Invocation.method(
            #searchByVin,
            [
              userId,
              vin,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.SearchResult>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> selectVehicleOption(
    String? userId,
    String? externalId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectVehicleOption,
          [
            userId,
            externalId,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #selectVehicleOption,
            [
              userId,
              externalId,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
}

/// A class which mocks [UserDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserDataSource extends _i1.Mock implements _i7.UserDataSource {
  MockUserDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String?> getUserId() => (super.noSuchMethod(
        Invocation.method(
          #getUserId,
          [],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}
